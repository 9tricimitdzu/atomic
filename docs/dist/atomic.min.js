/*! atomic v4.0.1 | (c) 2018 Chris Ferdinandi | MIT License | https://github.com/cferdinandi/atomic */
!(function(e,t){"function"==typeof define&&define.amd?define([],(function(){return t(e)})):"object"==typeof exports?module.exports=t(e):window.atomic=t(e)})("undefined"!=typeof global?global:"undefined"!=typeof window?window:this,(function(e){"use strict";var t,n=!!e.XMLHttpRequest&&!!e.JSON&&"undefined"!=typeof Promise&&-1!==Promise.toString().indexOf("[native code]"),r={method:"GET",username:null,password:null,data:{},headers:{"Content-type":"application/x-www-form-urlencoded"},responseType:"text",withCredentials:!1},o=function(){for(var e={},t=0;t<arguments.length;t++){var n=arguments[t];!(function(t){for(var n in t)t.hasOwnProperty(n)&&("[object Object]"===Object.prototype.toString.call(t[n])?e[n]=o(e[n],t[n]):e[n]=t[n])})(n)}return e},s=function(e){var n;if("text"!==t.responseType&&""!==t.responseType)return{data:e.response,xhr:e};try{n=JSON.parse(e.responseText)}catch(t){n=e.responseText}return{data:n,xhr:e}},a=function(e){if("string"==typeof e)return e;if(/application\/json/i.test(t.headers["Content-type"])||"[object Array]"===Object.prototype.toString.call(e))return JSON.stringify(e);var n=[];for(var r in e)e.hasOwnProperty(r)&&n.push(encodeURIComponent(r)+"="+encodeURIComponent(e[r]));return n.join("&")},i=function(e){var n=new XMLHttpRequest;return new Promise(function(r,o){n.onreadystatechange=function(){4===n.readyState&&(n.status>=200&&n.status<300?r(s(n)):o({status:n.status,statusText:n.statusText}))},n.open(t.method,e,!0,t.username,t.password),n.responseType=t.responseType;for(var i in t.headers)t.headers.hasOwnProperty(i)&&n.setRequestHeader(i,t.headers[i]);t.withCredentials&&(n.withCredentials=!0),n.send(a(t.data))})};return function(e,s){if(!n)throw"This browser does not support the methods used in this plugin.";return t=o(r,s||{}),i(e)}}));